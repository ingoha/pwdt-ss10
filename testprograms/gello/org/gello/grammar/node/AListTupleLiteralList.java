/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.gello.grammar.node;

import org.gello.grammar.analysis.*;

@SuppressWarnings("nls")
public final class AListTupleLiteralList extends PTupleLiteralList
{
    private PTupleLiteralList _tupleLiteralList_;
    private TComma _comma_;
    private PTypedVarDefinition _typedVarDefinition_;

    public AListTupleLiteralList()
    {
        // Constructor
    }

    public AListTupleLiteralList(
        @SuppressWarnings("hiding") PTupleLiteralList _tupleLiteralList_,
        @SuppressWarnings("hiding") TComma _comma_,
        @SuppressWarnings("hiding") PTypedVarDefinition _typedVarDefinition_)
    {
        // Constructor
        setTupleLiteralList(_tupleLiteralList_);

        setComma(_comma_);

        setTypedVarDefinition(_typedVarDefinition_);

    }

    @Override
    public Object clone()
    {
        return new AListTupleLiteralList(
            cloneNode(this._tupleLiteralList_),
            cloneNode(this._comma_),
            cloneNode(this._typedVarDefinition_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAListTupleLiteralList(this);
    }

    public PTupleLiteralList getTupleLiteralList()
    {
        return this._tupleLiteralList_;
    }

    public void setTupleLiteralList(PTupleLiteralList node)
    {
        if(this._tupleLiteralList_ != null)
        {
            this._tupleLiteralList_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tupleLiteralList_ = node;
    }

    public TComma getComma()
    {
        return this._comma_;
    }

    public void setComma(TComma node)
    {
        if(this._comma_ != null)
        {
            this._comma_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._comma_ = node;
    }

    public PTypedVarDefinition getTypedVarDefinition()
    {
        return this._typedVarDefinition_;
    }

    public void setTypedVarDefinition(PTypedVarDefinition node)
    {
        if(this._typedVarDefinition_ != null)
        {
            this._typedVarDefinition_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._typedVarDefinition_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._tupleLiteralList_)
            + toString(this._comma_)
            + toString(this._typedVarDefinition_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._tupleLiteralList_ == child)
        {
            this._tupleLiteralList_ = null;
            return;
        }

        if(this._comma_ == child)
        {
            this._comma_ = null;
            return;
        }

        if(this._typedVarDefinition_ == child)
        {
            this._typedVarDefinition_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._tupleLiteralList_ == oldChild)
        {
            setTupleLiteralList((PTupleLiteralList) newChild);
            return;
        }

        if(this._comma_ == oldChild)
        {
            setComma((TComma) newChild);
            return;
        }

        if(this._typedVarDefinition_ == oldChild)
        {
            setTypedVarDefinition((PTypedVarDefinition) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
