/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.gello.grammar.lexer;

import java.io.*;
import org.gello.grammar.node.*;

@SuppressWarnings("nls")
public class Lexer
{
    protected Token token;
    protected State state = State.NORMAL;

    private PushbackReader in;
    private int line;
    private int pos;
    private boolean cr;
    private boolean eof;
    private final StringBuffer text = new StringBuffer();

    @SuppressWarnings("unused")
    protected void filter() throws LexerException, IOException
    {
        // Do nothing
    }

    public Lexer(@SuppressWarnings("hiding") PushbackReader in)
    {
        this.in = in;
    }
 
    public Token peek() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        return this.token;
    }

    public Token next() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        Token result = this.token;
        this.token = null;
        return result;
    }

    protected Token getToken() throws IOException, LexerException
    {
        int dfa_state = 0;

        int start_pos = this.pos;
        int start_line = this.line;

        int accept_state = -1;
        int accept_token = -1;
        int accept_length = -1;
        int accept_pos = -1;
        int accept_line = -1;

        @SuppressWarnings("hiding") int[][][] gotoTable = Lexer.gotoTable[this.state.id()];
        @SuppressWarnings("hiding") int[] accept = Lexer.accept[this.state.id()];
        this.text.setLength(0);

        while(true)
        {
            int c = getChar();

            if(c != -1)
            {
                switch(c)
                {
                case 10:
                    if(this.cr)
                    {
                        this.cr = false;
                    }
                    else
                    {
                        this.line++;
                        this.pos = 0;
                    }
                    break;
                case 13:
                    this.line++;
                    this.pos = 0;
                    this.cr = true;
                    break;
                default:
                    this.pos++;
                    this.cr = false;
                    break;
                }

                this.text.append((char) c);

                do
                {
                    int oldState = (dfa_state < -1) ? (-2 -dfa_state) : dfa_state;

                    dfa_state = -1;

                    int[][] tmp1 =  gotoTable[oldState];
                    int low = 0;
                    int high = tmp1.length - 1;

                    while(low <= high)
                    {
                        int middle = (low + high) / 2;
                        int[] tmp2 = tmp1[middle];

                        if(c < tmp2[0])
                        {
                            high = middle - 1;
                        }
                        else if(c > tmp2[1])
                        {
                            low = middle + 1;
                        }
                        else
                        {
                            dfa_state = tmp2[2];
                            break;
                        }
                    }
                }while(dfa_state < -1);
            }
            else
            {
                dfa_state = -1;
            }

            if(dfa_state >= 0)
            {
                if(accept[dfa_state] != -1)
                {
                    accept_state = dfa_state;
                    accept_token = accept[dfa_state];
                    accept_length = this.text.length();
                    accept_pos = this.pos;
                    accept_line = this.line;
                }
            }
            else
            {
                if(accept_state != -1)
                {
                    switch(accept_token)
                    {
                    case 0:
                        {
                            @SuppressWarnings("hiding") Token token = new0(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 1:
                        {
                            @SuppressWarnings("hiding") Token token = new1(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 2:
                        {
                            @SuppressWarnings("hiding") Token token = new2(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 3:
                        {
                            @SuppressWarnings("hiding") Token token = new3(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 4:
                        {
                            @SuppressWarnings("hiding") Token token = new4(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 5:
                        {
                            @SuppressWarnings("hiding") Token token = new5(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 6:
                        {
                            @SuppressWarnings("hiding") Token token = new6(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 7:
                        {
                            @SuppressWarnings("hiding") Token token = new7(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 8:
                        {
                            @SuppressWarnings("hiding") Token token = new8(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 9:
                        {
                            @SuppressWarnings("hiding") Token token = new9(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 10:
                        {
                            @SuppressWarnings("hiding") Token token = new10(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 11:
                        {
                            @SuppressWarnings("hiding") Token token = new11(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 12:
                        {
                            @SuppressWarnings("hiding") Token token = new12(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 13:
                        {
                            @SuppressWarnings("hiding") Token token = new13(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 14:
                        {
                            @SuppressWarnings("hiding") Token token = new14(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 15:
                        {
                            @SuppressWarnings("hiding") Token token = new15(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 16:
                        {
                            @SuppressWarnings("hiding") Token token = new16(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 17:
                        {
                            @SuppressWarnings("hiding") Token token = new17(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 18:
                        {
                            @SuppressWarnings("hiding") Token token = new18(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 19:
                        {
                            @SuppressWarnings("hiding") Token token = new19(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 20:
                        {
                            @SuppressWarnings("hiding") Token token = new20(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 21:
                        {
                            @SuppressWarnings("hiding") Token token = new21(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 22:
                        {
                            @SuppressWarnings("hiding") Token token = new22(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 23:
                        {
                            @SuppressWarnings("hiding") Token token = new23(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 24:
                        {
                            @SuppressWarnings("hiding") Token token = new24(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 25:
                        {
                            @SuppressWarnings("hiding") Token token = new25(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 26:
                        {
                            @SuppressWarnings("hiding") Token token = new26(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 27:
                        {
                            @SuppressWarnings("hiding") Token token = new27(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 28:
                        {
                            @SuppressWarnings("hiding") Token token = new28(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 29:
                        {
                            @SuppressWarnings("hiding") Token token = new29(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 30:
                        {
                            @SuppressWarnings("hiding") Token token = new30(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 31:
                        {
                            @SuppressWarnings("hiding") Token token = new31(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 32:
                        {
                            @SuppressWarnings("hiding") Token token = new32(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 33:
                        {
                            @SuppressWarnings("hiding") Token token = new33(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 34:
                        {
                            @SuppressWarnings("hiding") Token token = new34(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 35:
                        {
                            @SuppressWarnings("hiding") Token token = new35(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 36:
                        {
                            @SuppressWarnings("hiding") Token token = new36(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 37:
                        {
                            @SuppressWarnings("hiding") Token token = new37(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 38:
                        {
                            @SuppressWarnings("hiding") Token token = new38(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 39:
                        {
                            @SuppressWarnings("hiding") Token token = new39(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 40:
                        {
                            @SuppressWarnings("hiding") Token token = new40(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 41:
                        {
                            @SuppressWarnings("hiding") Token token = new41(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 42:
                        {
                            @SuppressWarnings("hiding") Token token = new42(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 43:
                        {
                            @SuppressWarnings("hiding") Token token = new43(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 44:
                        {
                            @SuppressWarnings("hiding") Token token = new44(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.RANGE; break;
                            }
                            return token;
                        }
                    case 45:
                        {
                            @SuppressWarnings("hiding") Token token = new45(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 1: state = State.NORMAL; break;
                            }
                            return token;
                        }
                    case 46:
                        {
                            @SuppressWarnings("hiding") Token token = new46(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 47:
                        {
                            @SuppressWarnings("hiding") Token token = new47(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 48:
                        {
                            @SuppressWarnings("hiding") Token token = new48(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 49:
                        {
                            @SuppressWarnings("hiding") Token token = new49(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 50:
                        {
                            @SuppressWarnings("hiding") Token token = new50(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 51:
                        {
                            @SuppressWarnings("hiding") Token token = new51(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.NORMAL; break;
                            }
                            return token;
                        }
                    case 52:
                        {
                            @SuppressWarnings("hiding") Token token = new52(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 53:
                        {
                            @SuppressWarnings("hiding") Token token = new53(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    }
                }
                else
                {
                    if(this.text.length() > 0)
                    {
                        throw new LexerException(
                            "[" + (start_line + 1) + "," + (start_pos + 1) + "]" +
                            " Unknown token: " + this.text);
                    }

                    @SuppressWarnings("hiding") EOF token = new EOF(
                        start_line + 1,
                        start_pos + 1);
                    return token;
                }
            }
        }
    }

    Token new0(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TWhiteSpace(text, line, pos); }
    Token new1(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEndOfLineComment(text, line, pos); }
    Token new2(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIf(text, line, pos); }
    Token new3(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TThen(line, pos); }
    Token new4(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TElse(line, pos); }
    Token new5(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEndif(line, pos); }
    Token new6(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLet(text, line, pos); }
    Token new7(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIn(line, pos); }
    Token new8(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TContext(line, pos); }
    Token new9(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEndcontext(line, pos); }
    Token new10(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBoolean(line, pos); }
    Token new11(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TInt(line, pos); }
    Token new12(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TReal(line, pos); }
    Token new13(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TString(line, pos); }
    Token new14(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSet(line, pos); }
    Token new15(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBag(line, pos); }
    Token new16(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSequence(line, pos); }
    Token new17(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTuple(line, pos); }
    Token new18(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAnd(text, line, pos); }
    Token new19(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TArrow(line, pos); }
    Token new20(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TColon(line, pos); }
    Token new21(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComma(line, pos); }
    Token new22(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDivide(line, pos); }
    Token new23(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDot(line, pos); }
    Token new24(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDotdot(line, pos); }
    Token new25(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEq(line, pos); }
    Token new26(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TGteq(line, pos); }
    Token new27(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TGt(line, pos); }
    Token new28(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TImplies(line, pos); }
    Token new29(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIntdiv(line, pos); }
    Token new30(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLteq(line, pos); }
    Token new31(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLt(line, pos); }
    Token new32(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMax(line, pos); }
    Token new33(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMin(line, pos); }
    Token new34(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMinus(line, pos); }
    Token new35(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMod(line, pos); }
    Token new36(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNeq(text, line, pos); }
    Token new37(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNot(text, line, pos); }
    Token new38(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TOr(line, pos); }
    Token new39(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPlus(line, pos); }
    Token new40(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLParen(line, pos); }
    Token new41(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRParen(line, pos); }
    Token new42(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLBrace(line, pos); }
    Token new43(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRBrace(line, pos); }
    Token new44(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLBracket(line, pos); }
    Token new45(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRBracket(line, pos); }
    Token new46(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSemicolon(line, pos); }
    Token new47(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TStar(line, pos); }
    Token new48(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPipe(line, pos); }
    Token new49(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TXor(text, line, pos); }
    Token new50(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDecimalIntegerLiteral(text, line, pos); }
    Token new51(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFloatingPointLiteral(text, line, pos); }
    Token new52(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TStringLiteral(text, line, pos); }
    Token new53(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIdentifier(text, line, pos); }

    private int getChar() throws IOException
    {
        if(this.eof)
        {
            return -1;
        }

        int result = this.in.read();

        if(result == -1)
        {
            this.eof = true;
        }

        return result;
    }

    private void pushBack(int acceptLength) throws IOException
    {
        int length = this.text.length();
        for(int i = length - 1; i >= acceptLength; i--)
        {
            this.eof = false;

            this.in.unread(this.text.charAt(i));
        }
    }

    protected void unread(@SuppressWarnings("hiding") Token token) throws IOException
    {
        @SuppressWarnings("hiding") String text = token.getText();
        int length = text.length();

        for(int i = length - 1; i >= 0; i--)
        {
            this.eof = false;

            this.in.unread(text.charAt(i));
        }

        this.pos = token.getPos() - 1;
        this.line = token.getLine() - 1;
    }

    private String getText(int acceptLength)
    {
        StringBuffer s = new StringBuffer(acceptLength);
        for(int i = 0; i < acceptLength; i++)
        {
            s.append(this.text.charAt(i));
        }

        return s.toString();
    }

    private static int[][][][] gotoTable;
/*  {
        { // NORMAL
            {{9, 9, 1}, {10, 10, 2}, {12, 12, 3}, {13, 13, 4}, {32, 32, 5}, {33, 33, 6}, {34, 34, 7}, {38, 38, 8}, {39, 39, 9}, {40, 40, 10}, {41, 41, 11}, {42, 42, 12}, {43, 43, 13}, {44, 44, 14}, {45, 45, 15}, {46, 46, 16}, {47, 47, 17}, {48, 48, 18}, {49, 57, 19}, {58, 58, 20}, {59, 59, 21}, {60, 60, 22}, {61, 61, 23}, {62, 62, 24}, {65, 72, 25}, {73, 73, 26}, {74, 75, 25}, {76, 76, 27}, {77, 90, 25}, {91, 91, 28}, {97, 97, 29}, {98, 98, 30}, {99, 99, 31}, {100, 100, 32}, {101, 101, 33}, {102, 104, 34}, {105, 105, 35}, {106, 107, 34}, {108, 108, 36}, {109, 109, 37}, {110, 110, 38}, {111, 111, 39}, {112, 113, 34}, {114, 114, 40}, {115, 115, 41}, {116, 116, 42}, {117, 119, 34}, {120, 120, 43}, {121, 122, 34}, {123, 123, 44}, {124, 124, 45}, {125, 125, 46}, {170, 170, 47}, {181, 181, 48}, {186, 186, 49}, {192, 214, 50}, {216, 246, 51}, {248, 501, 52}, {506, 535, 53}, {592, 680, 54}, {688, 696, 55}, {699, 705, 56}, {720, 721, 57}, {736, 740, 58}, {890, 890, 59}, {902, 902, 60}, {904, 906, 61}, {908, 908, 62}, {910, 929, 63}, {931, 974, 64}, {976, 982, 65}, {986, 986, 66}, {988, 988, 67}, {990, 990, 68}, {992, 992, 69}, {994, 1011, 70}, {1025, 1036, 71}, {1038, 1103, 72}, {1105, 1116, 73}, {1118, 1153, 74}, {1168, 1220, 75}, {1223, 1224, 76}, {1227, 1228, 77}, {1232, 1259, 78}, {1262, 1269, 79}, {1272, 1273, 80}, {1329, 1366, 81}, {1369, 1369, 82}, {1377, 1415, 83}, {1488, 1514, 84}, {1520, 1522, 85}, {1569, 1594, 86}, {1600, 1610, 87}, {1649, 1719, 88}, {1722, 1726, 89}, {1728, 1742, 90}, {1744, 1747, 91}, {1749, 1749, 92}, {1765, 1766, 93}, {2309, 2361, 94}, {2365, 2365, 95}, {2392, 2401, 96}, {2437, 2444, 97}, {2447, 2448, 98}, {2451, 2472, 99}, {2474, 2480, 100}, {2482, 2482, 101}, {2486, 2489, 102}, {2524, 2525, 103}, {2527, 2529, 104}, {2544, 2545, 105}, {2565, 2570, 106}, {2575, 2576, 107}, {2579, 2600, 108}, {2602, 2608, 109}, {2610, 2611, 110}, {2613, 2614, 111}, {2616, 2617, 112}, {2649, 2652, 113}, {2654, 2654, 114}, {2674, 2676, 115}, {2693, 2699, 116}, {2701, 2701, 117}, {2703, 2705, 118}, {2707, 2728, 119}, {2730, 2736, 120}, {2738, 2739, 121}, {2741, 2745, 122}, {2749, 2749, 123}, {2784, 2784, 124}, {2821, 2828, 125}, {2831, 2832, 126}, {2835, 2856, 127}, {2858, 2864, 128}, {2866, 2867, 129}, {2870, 2873, 130}, {2877, 2877, 131}, {2908, 2909, 132}, {2911, 2913, 133}, {2949, 2954, 134}, {2958, 2960, 135}, {2962, 2965, 136}, {2969, 2970, 137}, {2972, 2972, 138}, {2974, 2975, 139}, {2979, 2980, 140}, {2984, 2986, 141}, {2990, 2997, 142}, {2999, 3001, 143}, {3077, 3084, 144}, {3086, 3088, 145}, {3090, 3112, 146}, {3114, 3123, 147}, {3125, 3129, 148}, {3168, 3169, 149}, {3205, 3212, 150}, {3214, 3216, 151}, {3218, 3240, 152}, {3242, 3251, 153}, {3253, 3257, 154}, {3294, 3294, 155}, {3296, 3297, 156}, {3333, 3340, 157}, {3342, 3344, 158}, {3346, 3368, 159}, {3370, 3385, 160}, {3424, 3425, 161}, {3585, 3630, 162}, {3632, 3632, 163}, {3634, 3635, 164}, {3648, 3654, 165}, {3713, 3714, 166}, {3716, 3716, 167}, {3719, 3720, 168}, {3722, 3722, 169}, {3725, 3725, 170}, {3732, 3735, 171}, {3737, 3743, 172}, {3745, 3747, 173}, {3749, 3749, 174}, {3751, 3751, 175}, {3754, 3755, 176}, {3757, 3758, 177}, {3760, 3760, 178}, {3762, 3763, 179}, {3773, 3773, 180}, {3776, 3780, 181}, {3782, 3782, 182}, {3804, 3805, 183}, {3904, 3911, 184}, {3913, 3945, 185}, {4256, 4293, 186}, {4304, 4342, 187}, {4352, 4441, 188}, {4447, 4514, 189}, {4520, 4601, 190}, {7680, 7835, 191}, {7840, 7929, 192}, {7936, 7957, 193}, {7960, 7965, 194}, {7968, 8005, 195}, {8008, 8013, 196}, {8016, 8023, 197}, {8025, 8025, 198}, {8027, 8027, 199}, {8029, 8029, 200}, {8031, 8061, 201}, {8064, 8116, 202}, {8118, 8124, 203}, {8126, 8126, 204}, {8130, 8132, 205}, {8134, 8140, 206}, {8144, 8147, 207}, {8150, 8155, 208}, {8160, 8172, 209}, {8178, 8180, 210}, {8182, 8188, 211}, {8319, 8319, 212}, {8450, 8450, 213}, {8455, 8455, 214}, {8458, 8467, 215}, {8469, 8469, 216}, {8472, 8477, 217}, {8484, 8484, 218}, {8486, 8486, 219}, {8488, 8488, 220}, {8490, 8497, 221}, {8499, 8504, 222}, {12293, 12293, 223}, {12337, 12341, 224}, {12353, 12436, 225}, {12443, 12446, 226}, {12449, 12538, 227}, {12540, 12542, 228}, {12549, 12588, 229}, {12593, 12686, 230}, {19968, 40869, 231}, {44032, 55203, 232}, {63744, 64045, 233}, {64256, 64262, 234}, {64275, 64279, 235}, {64287, 64296, 236}, {64298, 64310, 237}, {64312, 64316, 238}, {64318, 64318, 239}, {64320, 64321, 240}, {64323, 64324, 241}, {64326, 64433, 242}, {64467, 64829, 243}, {64848, 64911, 244}, {64914, 64967, 245}, {65008, 65019, 246}, {65136, 65138, 247}, {65140, 65140, 248}, {65142, 65276, 249}, {65313, 65338, 250}, {65345, 65370, 251}, {65382, 65470, 252}, {65474, 65479, 253}, {65482, 65487, 254}, {65490, 65495, 255}, {65498, 65500, 256}, },
            {{9, 32, -2}, },
            {{9, 32, -2}, },
            {{9, 32, -2}, },
            {{9, 9, 1}, {10, 10, 257}, {12, 32, -2}, },
            {{9, 32, -2}, },
            {{61, 61, 258}, },
            {{0, 8, 259}, {11, 12, 259}, {14, 33, 259}, {34, 34, 260}, {35, 65535, 259}, },
            {},
            {{0, 8, 261}, {11, 12, 261}, {14, 38, 261}, {39, 39, 262}, {40, 65535, 261}, },
            {},
            {},
            {{124, 124, 263}, },
            {},
            {},
            {{45, 45, 264}, {62, 62, 265}, },
            {{46, 46, 266}, {48, 57, 267}, },
            {},
            {{46, 46, 268}, {48, 57, 269}, {69, 69, 270}, {101, 101, 271}, },
            {{46, 46, 268}, {48, 57, 272}, {69, 101, -20}, },
            {},
            {},
            {{61, 61, 273}, {62, 62, 274}, },
            {},
            {{61, 61, 275}, },
            {{48, 57, 276}, {65, 90, 277}, {95, 95, 278}, {97, 122, 279}, {170, 170, 280}, {181, 181, 281}, {186, 186, 282}, {192, 214, 283}, {216, 246, 284}, {248, 501, 285}, {506, 535, 286}, {592, 680, 287}, {688, 696, 288}, {699, 705, 289}, {720, 721, 290}, {736, 740, 291}, {890, 890, 292}, {902, 902, 293}, {904, 906, 294}, {908, 908, 295}, {910, 929, 296}, {931, 974, 297}, {976, 982, 298}, {986, 986, 299}, {988, 988, 300}, {990, 990, 301}, {992, 992, 302}, {994, 1011, 303}, {1025, 1036, 304}, {1038, 1103, 305}, {1105, 1116, 306}, {1118, 1153, 307}, {1168, 1220, 308}, {1223, 1224, 309}, {1227, 1228, 310}, {1232, 1259, 311}, {1262, 1269, 312}, {1272, 1273, 313}, {1329, 1366, 314}, {1369, 1369, 315}, {1377, 1415, 316}, {1488, 1514, 317}, {1520, 1522, 318}, {1569, 1594, 319}, {1600, 1610, 320}, {1632, 1641, 321}, {1649, 1719, 322}, {1722, 1726, 323}, {1728, 1742, 324}, {1744, 1747, 325}, {1749, 1749, 326}, {1765, 1766, 327}, {1776, 1785, 328}, {2309, 2361, 329}, {2365, 2365, 330}, {2392, 2401, 331}, {2406, 2415, 332}, {2437, 2444, 333}, {2447, 2448, 334}, {2451, 2472, 335}, {2474, 2480, 336}, {2482, 2482, 337}, {2486, 2489, 338}, {2524, 2525, 339}, {2527, 2529, 340}, {2534, 2543, 341}, {2544, 2545, 342}, {2565, 2570, 343}, {2575, 2576, 344}, {2579, 2600, 345}, {2602, 2608, 346}, {2610, 2611, 347}, {2613, 2614, 348}, {2616, 2617, 349}, {2649, 2652, 350}, {2654, 2654, 351}, {2662, 2671, 352}, {2674, 2676, 353}, {2693, 2699, 354}, {2701, 2701, 355}, {2703, 2705, 356}, {2707, 2728, 357}, {2730, 2736, 358}, {2738, 2739, 359}, {2741, 2745, 360}, {2749, 2749, 361}, {2784, 2784, 362}, {2790, 2799, 363}, {2821, 2828, 364}, {2831, 2832, 365}, {2835, 2856, 366}, {2858, 2864, 367}, {2866, 2867, 368}, {2870, 2873, 369}, {2877, 2877, 370}, {2908, 2909, 371}, {2911, 2913, 372}, {2918, 2927, 373}, {2949, 2954, 374}, {2958, 2960, 375}, {2962, 2965, 376}, {2969, 2970, 377}, {2972, 2972, 378}, {2974, 2975, 379}, {2979, 2980, 380}, {2984, 2986, 381}, {2990, 2997, 382}, {2999, 3001, 383}, {3047, 3055, 384}, {3077, 3084, 385}, {3086, 3088, 386}, {3090, 3112, 387}, {3114, 3123, 388}, {3125, 3129, 389}, {3168, 3169, 390}, {3174, 3183, 391}, {3205, 3212, 392}, {3214, 3216, 393}, {3218, 3240, 394}, {3242, 3251, 395}, {3253, 3257, 396}, {3294, 3294, 397}, {3296, 3297, 398}, {3302, 3311, 399}, {3333, 3340, 400}, {3342, 3344, 401}, {3346, 3368, 402}, {3370, 3385, 403}, {3424, 3425, 404}, {3430, 3439, 405}, {3585, 3630, 406}, {3632, 3632, 407}, {3634, 3635, 408}, {3648, 3654, 409}, {3664, 3673, 410}, {3713, 3714, 411}, {3716, 3716, 412}, {3719, 3720, 413}, {3722, 3722, 414}, {3725, 3725, 415}, {3732, 3735, 416}, {3737, 3743, 417}, {3745, 3747, 418}, {3749, 3749, 419}, {3751, 3751, 420}, {3754, 3755, 421}, {3757, 3758, 422}, {3760, 3760, 423}, {3762, 3763, 424}, {3773, 3773, 425}, {3776, 3780, 426}, {3782, 3782, 427}, {3792, 3801, 428}, {3804, 3805, 429}, {3872, 3881, 430}, {3904, 3911, 431}, {3913, 3945, 432}, {4256, 4293, 433}, {4304, 4342, 434}, {4352, 4441, 435}, {4447, 4514, 436}, {4520, 4601, 437}, {7680, 7835, 438}, {7840, 7929, 439}, {7936, 7957, 440}, {7960, 7965, 441}, {7968, 8005, 442}, {8008, 8013, 443}, {8016, 8023, 444}, {8025, 8025, 445}, {8027, 8027, 446}, {8029, 8029, 447}, {8031, 8061, 448}, {8064, 8116, 449}, {8118, 8124, 450}, {8126, 8126, 451}, {8130, 8132, 452}, {8134, 8140, 453}, {8144, 8147, 454}, {8150, 8155, 455}, {8160, 8172, 456}, {8178, 8180, 457}, {8182, 8188, 458}, {8319, 8319, 459}, {8450, 8450, 460}, {8455, 8455, 461}, {8458, 8467, 462}, {8469, 8469, 463}, {8472, 8477, 464}, {8484, 8484, 465}, {8486, 8486, 466}, {8488, 8488, 467}, {8490, 8497, 468}, {8499, 8504, 469}, {12293, 12293, 470}, {12337, 12341, 471}, {12353, 12436, 472}, {12443, 12446, 473}, {12449, 12538, 474}, {12540, 12542, 475}, {12549, 12588, 476}, {12593, 12686, 477}, {19968, 40869, 478}, {44032, 55203, 479}, {63744, 64045, 480}, {64256, 64262, 481}, {64275, 64279, 482}, {64287, 64296, 483}, {64298, 64310, 484}, {64312, 64316, 485}, {64318, 64318, 486}, {64320, 64321, 487}, {64323, 64324, 488}, {64326, 64433, 489}, {64467, 64829, 490}, {64848, 64911, 491}, {64914, 64967, 492}, {65008, 65019, 493}, {65136, 65138, 494}, {65140, 65140, 495}, {65142, 65276, 496}, {65296, 65305, 497}, {65313, 65338, 498}, {65345, 65370, 499}, {65382, 65470, 500}, {65474, 65479, 501}, {65482, 65487, 502}, {65490, 65495, 503}, {65498, 65500, 504}, },
            {{48, 95, -27}, {97, 101, 279}, {102, 102, 505}, {103, 122, 279}, {170, 65500, -27}, },
            {{48, 95, -27}, {97, 100, 279}, {101, 101, 506}, {102, 122, 279}, {170, 65500, -27}, },
            {},
            {{48, 95, -27}, {97, 109, 279}, {110, 110, 507}, {111, 122, 279}, {170, 65500, -27}, },
            {{48, 95, -27}, {97, 97, 508}, {98, 110, 279}, {111, 111, 509}, {112, 122, 279}, {170, 65500, -27}, },
            {{48, 95, -27}, {97, 110, 279}, {111, 111, 510}, {112, 65500, -32}, },
            {{48, 95, -27}, {97, 104, 279}, {105, 105, 511}, {106, 122, 279}, {170, 65500, -27}, },
            {{48, 95, -27}, {97, 107, 279}, {108, 108, 512}, {109, 109, 279}, {110, 110, 513}, {111, 65500, -31}, },
            {{48, 65500, -27}, },
            {{48, 101, -28}, {102, 102, 514}, {103, 108, 279}, {109, 109, 515}, {110, 110, 516}, {111, 65500, -31}, },
            {{48, 100, -29}, {101, 101, 517}, {102, 65500, -29}, },
            {{48, 95, -27}, {97, 97, 518}, {98, 104, 279}, {105, 105, 519}, {106, 110, 279}, {111, 111, 520}, {112, 65500, -32}, },
            {{48, 110, -33}, {111, 111, 521}, {112, 65500, -32}, },
            {{48, 95, -27}, {97, 113, 279}, {114, 114, 522}, {115, 122, 279}, {170, 65500, -27}, },
            {{48, 100, -29}, {101, 101, 523}, {102, 65500, -29}, },
            {{48, 100, -29}, {101, 101, 524}, {102, 115, 279}, {116, 116, 525}, {117, 122, 279}, {170, 65500, -27}, },
            {{48, 95, -27}, {97, 103, 279}, {104, 104, 526}, {105, 116, 279}, {117, 117, 527}, {118, 122, 279}, {170, 65500, -27}, },
            {{48, 110, -33}, {111, 111, 528}, {112, 65500, -32}, },
            {},
            {},
            {},
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{9, 32, -2}, },
            {},
            {{0, 65535, -9}, },
            {},
            {{0, 65535, -11}, },
            {},
            {},
            {{0, 9, 529}, {10, 10, 530}, {11, 12, 529}, {13, 13, 531}, {14, 65535, 529}, },
            {},
            {},
            {{48, 57, 267}, {69, 69, 532}, {101, 101, 533}, },
            {{48, 57, 534}, {69, 69, 535}, {101, 101, 536}, },
            {{46, 101, -20}, },
            {{43, 43, 537}, {45, 45, 538}, {48, 57, 539}, },
            {{43, 57, -272}, },
            {{46, 101, -21}, },
            {},
            {},
            {},
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 57, 540}, {65, 90, 541}, {97, 122, 542}, {170, 170, 543}, {181, 181, 544}, {186, 186, 545}, {192, 214, 546}, {216, 246, 547}, {248, 501, 548}, {506, 535, 549}, {592, 680, 550}, {688, 696, 551}, {699, 705, 552}, {720, 721, 553}, {736, 740, 554}, {890, 890, 555}, {902, 902, 556}, {904, 906, 557}, {908, 908, 558}, {910, 929, 559}, {931, 974, 560}, {976, 982, 561}, {986, 986, 562}, {988, 988, 563}, {990, 990, 564}, {992, 992, 565}, {994, 1011, 566}, {1025, 1036, 567}, {1038, 1103, 568}, {1105, 1116, 569}, {1118, 1153, 570}, {1168, 1220, 571}, {1223, 1224, 572}, {1227, 1228, 573}, {1232, 1259, 574}, {1262, 1269, 575}, {1272, 1273, 576}, {1329, 1366, 577}, {1369, 1369, 578}, {1377, 1415, 579}, {1488, 1514, 580}, {1520, 1522, 581}, {1569, 1594, 582}, {1600, 1610, 583}, {1632, 1641, 584}, {1649, 1719, 585}, {1722, 1726, 586}, {1728, 1742, 587}, {1744, 1747, 588}, {1749, 1749, 589}, {1765, 1766, 590}, {1776, 1785, 591}, {2309, 2361, 592}, {2365, 2365, 593}, {2392, 2401, 594}, {2406, 2415, 595}, {2437, 2444, 596}, {2447, 2448, 597}, {2451, 2472, 598}, {2474, 2480, 599}, {2482, 2482, 600}, {2486, 2489, 601}, {2524, 2525, 602}, {2527, 2529, 603}, {2534, 2543, 604}, {2544, 2545, 605}, {2565, 2570, 606}, {2575, 2576, 607}, {2579, 2600, 608}, {2602, 2608, 609}, {2610, 2611, 610}, {2613, 2614, 611}, {2616, 2617, 612}, {2649, 2652, 613}, {2654, 2654, 614}, {2662, 2671, 615}, {2674, 2676, 616}, {2693, 2699, 617}, {2701, 2701, 618}, {2703, 2705, 619}, {2707, 2728, 620}, {2730, 2736, 621}, {2738, 2739, 622}, {2741, 2745, 623}, {2749, 2749, 624}, {2784, 2784, 625}, {2790, 2799, 626}, {2821, 2828, 627}, {2831, 2832, 628}, {2835, 2856, 629}, {2858, 2864, 630}, {2866, 2867, 631}, {2870, 2873, 632}, {2877, 2877, 633}, {2908, 2909, 634}, {2911, 2913, 635}, {2918, 2927, 636}, {2949, 2954, 637}, {2958, 2960, 638}, {2962, 2965, 639}, {2969, 2970, 640}, {2972, 2972, 641}, {2974, 2975, 642}, {2979, 2980, 643}, {2984, 2986, 644}, {2990, 2997, 645}, {2999, 3001, 646}, {3047, 3055, 647}, {3077, 3084, 648}, {3086, 3088, 649}, {3090, 3112, 650}, {3114, 3123, 651}, {3125, 3129, 652}, {3168, 3169, 653}, {3174, 3183, 654}, {3205, 3212, 655}, {3214, 3216, 656}, {3218, 3240, 657}, {3242, 3251, 658}, {3253, 3257, 659}, {3294, 3294, 660}, {3296, 3297, 661}, {3302, 3311, 662}, {3333, 3340, 663}, {3342, 3344, 664}, {3346, 3368, 665}, {3370, 3385, 666}, {3424, 3425, 667}, {3430, 3439, 668}, {3585, 3630, 669}, {3632, 3632, 670}, {3634, 3635, 671}, {3648, 3654, 672}, {3664, 3673, 673}, {3713, 3714, 674}, {3716, 3716, 675}, {3719, 3720, 676}, {3722, 3722, 677}, {3725, 3725, 678}, {3732, 3735, 679}, {3737, 3743, 680}, {3745, 3747, 681}, {3749, 3749, 682}, {3751, 3751, 683}, {3754, 3755, 684}, {3757, 3758, 685}, {3760, 3760, 686}, {3762, 3763, 687}, {3773, 3773, 688}, {3776, 3780, 689}, {3782, 3782, 690}, {3792, 3801, 691}, {3804, 3805, 692}, {3872, 3881, 693}, {3904, 3911, 694}, {3913, 3945, 695}, {4256, 4293, 696}, {4304, 4342, 697}, {4352, 4441, 698}, {4447, 4514, 699}, {4520, 4601, 700}, {7680, 7835, 701}, {7840, 7929, 702}, {7936, 7957, 703}, {7960, 7965, 704}, {7968, 8005, 705}, {8008, 8013, 706}, {8016, 8023, 707}, {8025, 8025, 708}, {8027, 8027, 709}, {8029, 8029, 710}, {8031, 8061, 711}, {8064, 8116, 712}, {8118, 8124, 713}, {8126, 8126, 714}, {8130, 8132, 715}, {8134, 8140, 716}, {8144, 8147, 717}, {8150, 8155, 718}, {8160, 8172, 719}, {8178, 8180, 720}, {8182, 8188, 721}, {8319, 8319, 722}, {8450, 8450, 723}, {8455, 8455, 724}, {8458, 8467, 725}, {8469, 8469, 726}, {8472, 8477, 727}, {8484, 8484, 728}, {8486, 8486, 729}, {8488, 8488, 730}, {8490, 8497, 731}, {8499, 8504, 732}, {12293, 12293, 733}, {12337, 12341, 734}, {12353, 12436, 735}, {12443, 12446, 736}, {12449, 12538, 737}, {12540, 12542, 738}, {12549, 12588, 739}, {12593, 12686, 740}, {19968, 40869, 741}, {44032, 55203, 742}, {63744, 64045, 743}, {64256, 64262, 744}, {64275, 64279, 745}, {64287, 64296, 746}, {64298, 64310, 747}, {64312, 64316, 748}, {64318, 64318, 749}, {64320, 64321, 750}, {64323, 64324, 751}, {64326, 64433, 752}, {64467, 64829, 753}, {64848, 64911, 754}, {64914, 64967, 755}, {65008, 65019, 756}, {65136, 65138, 757}, {65140, 65140, 758}, {65142, 65276, 759}, {65296, 65305, 760}, {65313, 65338, 761}, {65345, 65370, 762}, {65382, 65470, 763}, {65474, 65479, 764}, {65482, 65487, 765}, {65490, 65495, 766}, {65498, 65500, 767}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 95, -27}, {97, 115, 279}, {116, 116, 768}, {117, 65500, -43}, },
            {{48, 95, -27}, {97, 99, 279}, {100, 100, 769}, {101, 122, 279}, {170, 65500, -27}, },
            {{48, 95, -27}, {97, 102, 279}, {103, 103, 770}, {104, 122, 279}, {170, 65500, -27}, },
            {{48, 110, -33}, {111, 111, 771}, {112, 65500, -32}, },
            {{48, 109, -31}, {110, 110, 772}, {111, 65500, -31}, },
            {{48, 95, -27}, {97, 117, 279}, {118, 118, 773}, {119, 122, 279}, {170, 65500, -27}, },
            {{48, 95, -27}, {97, 114, 279}, {115, 115, 774}, {116, 122, 279}, {170, 65500, -27}, },
            {{48, 99, -509}, {100, 100, 775}, {101, 65500, -509}, },
            {{48, 65500, -27}, },
            {{48, 95, -27}, {97, 111, 279}, {112, 112, 776}, {113, 122, 279}, {170, 65500, -27}, },
            {{48, 115, -508}, {116, 116, 777}, {117, 65500, -43}, },
            {{48, 115, -508}, {116, 116, 778}, {117, 65500, -43}, },
            {{48, 95, -27}, {97, 119, 279}, {120, 120, 779}, {121, 122, 279}, {170, 65500, -27}, },
            {{48, 109, -31}, {110, 110, 780}, {111, 65500, -31}, },
            {{48, 99, -509}, {100, 100, 781}, {101, 65500, -509}, },
            {{48, 115, -508}, {116, 116, 782}, {117, 65500, -43}, },
            {{48, 65500, -27}, },
            {{48, 95, -27}, {97, 97, 783}, {98, 122, 279}, {170, 65500, -27}, },
            {{48, 95, -27}, {97, 112, 279}, {113, 113, 784}, {114, 115, 279}, {116, 116, 785}, {117, 65500, -43}, },
            {{48, 113, -41}, {114, 114, 786}, {115, 65500, -41}, },
            {{48, 100, -29}, {101, 101, 787}, {102, 65500, -29}, },
            {{48, 111, -517}, {112, 112, 788}, {113, 65500, -517}, },
            {{48, 113, -41}, {114, 114, 789}, {115, 65500, -41}, },
            {{0, 65535, -266}, },
            {},
            {{10, 10, 790}, },
            {{43, 43, 791}, {45, 45, 792}, {48, 57, 793}, },
            {{43, 57, -534}, },
            {{48, 101, -270}, },
            {{43, 43, 794}, {45, 45, 795}, {48, 57, 796}, },
            {{43, 57, -537}, },
            {{48, 57, 539}, },
            {{48, 57, 539}, },
            {{48, 57, 539}, },
            {{48, 57, 797}, {65, 90, 798}, {95, 95, 278}, {97, 122, 799}, {170, 170, 800}, {181, 181, 801}, {186, 186, 802}, {192, 214, 803}, {216, 246, 804}, {248, 501, 805}, {506, 535, 806}, {592, 680, 807}, {688, 696, 808}, {699, 705, 809}, {720, 721, 810}, {736, 740, 811}, {890, 890, 812}, {902, 902, 813}, {904, 906, 814}, {908, 908, 815}, {910, 929, 816}, {931, 974, 817}, {976, 982, 818}, {986, 986, 819}, {988, 988, 820}, {990, 990, 821}, {992, 992, 822}, {994, 1011, 823}, {1025, 1036, 824}, {1038, 1103, 825}, {1105, 1116, 826}, {1118, 1153, 827}, {1168, 1220, 828}, {1223, 1224, 829}, {1227, 1228, 830}, {1232, 1259, 831}, {1262, 1269, 832}, {1272, 1273, 833}, {1329, 1366, 834}, {1369, 1369, 835}, {1377, 1415, 836}, {1488, 1514, 837}, {1520, 1522, 838}, {1569, 1594, 839}, {1600, 1610, 840}, {1632, 1641, 841}, {1649, 1719, 842}, {1722, 1726, 843}, {1728, 1742, 844}, {1744, 1747, 845}, {1749, 1749, 846}, {1765, 1766, 847}, {1776, 1785, 848}, {2309, 2361, 849}, {2365, 2365, 850}, {2392, 2401, 851}, {2406, 2415, 852}, {2437, 2444, 853}, {2447, 2448, 854}, {2451, 2472, 855}, {2474, 2480, 856}, {2482, 2482, 857}, {2486, 2489, 858}, {2524, 2525, 859}, {2527, 2529, 860}, {2534, 2543, 861}, {2544, 2545, 862}, {2565, 2570, 863}, {2575, 2576, 864}, {2579, 2600, 865}, {2602, 2608, 866}, {2610, 2611, 867}, {2613, 2614, 868}, {2616, 2617, 869}, {2649, 2652, 870}, {2654, 2654, 871}, {2662, 2671, 872}, {2674, 2676, 873}, {2693, 2699, 874}, {2701, 2701, 875}, {2703, 2705, 876}, {2707, 2728, 877}, {2730, 2736, 878}, {2738, 2739, 879}, {2741, 2745, 880}, {2749, 2749, 881}, {2784, 2784, 882}, {2790, 2799, 883}, {2821, 2828, 884}, {2831, 2832, 885}, {2835, 2856, 886}, {2858, 2864, 887}, {2866, 2867, 888}, {2870, 2873, 889}, {2877, 2877, 890}, {2908, 2909, 891}, {2911, 2913, 892}, {2918, 2927, 893}, {2949, 2954, 894}, {2958, 2960, 895}, {2962, 2965, 896}, {2969, 2970, 897}, {2972, 2972, 898}, {2974, 2975, 899}, {2979, 2980, 900}, {2984, 2986, 901}, {2990, 2997, 902}, {2999, 3001, 903}, {3047, 3055, 904}, {3077, 3084, 905}, {3086, 3088, 906}, {3090, 3112, 907}, {3114, 3123, 908}, {3125, 3129, 909}, {3168, 3169, 910}, {3174, 3183, 911}, {3205, 3212, 912}, {3214, 3216, 913}, {3218, 3240, 914}, {3242, 3251, 915}, {3253, 3257, 916}, {3294, 3294, 917}, {3296, 3297, 918}, {3302, 3311, 919}, {3333, 3340, 920}, {3342, 3344, 921}, {3346, 3368, 922}, {3370, 3385, 923}, {3424, 3425, 924}, {3430, 3439, 925}, {3585, 3630, 926}, {3632, 3632, 927}, {3634, 3635, 928}, {3648, 3654, 929}, {3664, 3673, 930}, {3713, 3714, 931}, {3716, 3716, 932}, {3719, 3720, 933}, {3722, 3722, 934}, {3725, 3725, 935}, {3732, 3735, 936}, {3737, 3743, 937}, {3745, 3747, 938}, {3749, 3749, 939}, {3751, 3751, 940}, {3754, 3755, 941}, {3757, 3758, 942}, {3760, 3760, 943}, {3762, 3763, 944}, {3773, 3773, 945}, {3776, 3780, 946}, {3782, 3782, 947}, {3792, 3801, 948}, {3804, 3805, 949}, {3872, 3881, 950}, {3904, 3911, 951}, {3913, 3945, 952}, {4256, 4293, 953}, {4304, 4342, 954}, {4352, 4441, 955}, {4447, 4514, 956}, {4520, 4601, 957}, {7680, 7835, 958}, {7840, 7929, 959}, {7936, 7957, 960}, {7960, 7965, 961}, {7968, 8005, 962}, {8008, 8013, 963}, {8016, 8023, 964}, {8025, 8025, 965}, {8027, 8027, 966}, {8029, 8029, 967}, {8031, 8061, 968}, {8064, 8116, 969}, {8118, 8124, 970}, {8126, 8126, 971}, {8130, 8132, 972}, {8134, 8140, 973}, {8144, 8147, 974}, {8150, 8155, 975}, {8160, 8172, 976}, {8178, 8180, 977}, {8182, 8188, 978}, {8319, 8319, 979}, {8450, 8450, 980}, {8455, 8455, 981}, {8458, 8467, 982}, {8469, 8469, 983}, {8472, 8477, 984}, {8484, 8484, 985}, {8486, 8486, 986}, {8488, 8488, 987}, {8490, 8497, 988}, {8499, 8504, 989}, {12293, 12293, 990}, {12337, 12341, 991}, {12353, 12436, 992}, {12443, 12446, 993}, {12449, 12538, 994}, {12540, 12542, 995}, {12549, 12588, 996}, {12593, 12686, 997}, {19968, 40869, 998}, {44032, 55203, 999}, {63744, 64045, 1000}, {64256, 64262, 1001}, {64275, 64279, 1002}, {64287, 64296, 1003}, {64298, 64310, 1004}, {64312, 64316, 1005}, {64318, 64318, 1006}, {64320, 64321, 1007}, {64323, 64324, 1008}, {64326, 64433, 1009}, {64467, 64829, 1010}, {64848, 64911, 1011}, {64914, 64967, 1012}, {65008, 65019, 1013}, {65136, 65138, 1014}, {65140, 65140, 1015}, {65142, 65276, 1016}, {65296, 65305, 1017}, {65313, 65338, 1018}, {65345, 65370, 1019}, {65382, 65470, 1020}, {65474, 65479, 1021}, {65482, 65487, 1022}, {65490, 65495, 1023}, {65498, 65500, 1024}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 107, -35}, {108, 108, 1025}, {109, 122, 279}, {170, 65500, -27}, },
            {{48, 115, -508}, {116, 116, 1026}, {117, 65500, -43}, },
            {{48, 65500, -27}, },
            {{48, 100, -29}, {101, 101, 1027}, {102, 65500, -29}, },
            {{48, 57, 276}, {65, 66, 277}, {67, 67, 1028}, {68, 90, 277}, {95, 104, -34}, {105, 105, 1029}, {106, 65500, -34}, },
            {{48, 107, -35}, {108, 108, 1030}, {109, 65500, -773}, },
            {{48, 100, -29}, {101, 101, 1031}, {102, 65500, -29}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 107, -35}, {108, 108, 1032}, {109, 65500, -773}, },
            {{48, 95, -27}, {97, 116, 279}, {117, 117, 1033}, {118, 65500, -44}, },
            {{48, 65500, -27}, },
            {{48, 104, -34}, {105, 105, 1034}, {106, 65500, -34}, },
            {{48, 109, -31}, {110, 110, 1035}, {111, 65500, -31}, },
            {{48, 107, -35}, {108, 108, 1036}, {109, 65500, -773}, },
            {{48, 65500, -27}, },
            {},
            {{48, 57, 793}, },
            {{48, 57, 793}, },
            {{48, 57, 793}, },
            {{48, 57, 796}, },
            {{48, 57, 796}, },
            {{48, 57, 796}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 65500, -542}, },
            {{48, 100, -29}, {101, 101, 1037}, {102, 65500, -29}, },
            {{48, 100, -29}, {101, 101, 1038}, {102, 65500, -29}, },
            {{48, 65500, -27}, },
            {{48, 110, -33}, {111, 111, 1039}, {112, 65500, -32}, },
            {{48, 101, -28}, {102, 102, 1040}, {103, 65500, -28}, },
            {{48, 104, -34}, {105, 105, 1041}, {106, 65500, -34}, },
            {{48, 102, -510}, {103, 103, 1042}, {104, 65500, -510}, },
            {{48, 65500, -27}, },
            {{48, 100, -29}, {101, 101, 1043}, {102, 65500, -29}, },
            {{48, 109, -31}, {110, 110, 1044}, {111, 65500, -31}, },
            {{48, 65500, -27}, },
            {{48, 100, -29}, {101, 101, 1045}, {102, 65500, -29}, },
            {{48, 95, -27}, {97, 97, 1046}, {98, 65500, -525}, },
            {{48, 119, -520}, {120, 120, 1047}, {121, 65500, -520}, },
            {{48, 109, -31}, {110, 110, 1048}, {111, 65500, -31}, },
            {{48, 65500, -27}, },
            {{48, 100, -29}, {101, 101, 1049}, {102, 65500, -29}, },
            {{48, 100, -29}, {101, 101, 1050}, {102, 65500, -29}, },
            {{48, 109, -31}, {110, 110, 1051}, {111, 65500, -31}, },
            {{48, 102, -510}, {103, 103, 1052}, {104, 65500, -510}, },
            {{48, 65500, -27}, },
            {{48, 109, -31}, {110, 110, 1053}, {111, 65500, -31}, },
            {{48, 115, -508}, {116, 116, 1054}, {117, 65500, -43}, },
            {{48, 115, -508}, {116, 116, 1055}, {117, 65500, -43}, },
            {{48, 114, -514}, {115, 115, 1056}, {116, 65500, -514}, },
            {{48, 113, -41}, {114, 114, 1057}, {115, 65500, -41}, },
            {{48, 95, -27}, {97, 98, 279}, {99, 99, 1058}, {100, 122, 279}, {170, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 100, -29}, {101, 101, 1059}, {102, 65500, -29}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 100, -29}, {101, 101, 1060}, {102, 65500, -29}, },
            {{48, 119, -520}, {120, 120, 1061}, {121, 65500, -520}, },
            {{48, 65500, -27}, },
            {{48, 115, -508}, {116, 116, 1062}, {117, 65500, -43}, },
            {{48, 65500, -27}, },
        }
        { // RANGE
            {{9, 9, 1}, {10, 10, 2}, {12, 12, 3}, {13, 13, 4}, {32, 32, 5}, {33, 33, 6}, {34, 34, 7}, {38, 38, 8}, {39, 39, 9}, {40, 40, 10}, {41, 41, 11}, {42, 42, 12}, {43, 43, 13}, {44, 44, 14}, {45, 45, 15}, {46, 46, 16}, {47, 47, 17}, {48, 48, 18}, {49, 57, 19}, {58, 58, 20}, {59, 59, 21}, {60, 60, 22}, {61, 61, 23}, {62, 62, 24}, {65, 72, 25}, {73, 73, 26}, {74, 75, 25}, {76, 76, 27}, {77, 90, 25}, {93, 93, 28}, {97, 97, 29}, {98, 98, 30}, {99, 99, 31}, {100, 100, 32}, {101, 101, 33}, {102, 104, 34}, {105, 105, 35}, {106, 107, 34}, {108, 108, 36}, {109, 109, 37}, {110, 110, 38}, {111, 111, 39}, {112, 113, 34}, {114, 114, 40}, {115, 115, 41}, {116, 116, 42}, {117, 119, 34}, {120, 120, 43}, {121, 122, 34}, {123, 123, 44}, {124, 124, 45}, {125, 125, 46}, {170, 170, 47}, {181, 181, 48}, {186, 186, 49}, {192, 214, 50}, {216, 246, 51}, {248, 501, 52}, {506, 535, 53}, {592, 680, 54}, {688, 696, 55}, {699, 705, 56}, {720, 721, 57}, {736, 740, 58}, {890, 890, 59}, {902, 902, 60}, {904, 906, 61}, {908, 908, 62}, {910, 929, 63}, {931, 974, 64}, {976, 982, 65}, {986, 986, 66}, {988, 988, 67}, {990, 990, 68}, {992, 992, 69}, {994, 1011, 70}, {1025, 1036, 71}, {1038, 1103, 72}, {1105, 1116, 73}, {1118, 1153, 74}, {1168, 1220, 75}, {1223, 1224, 76}, {1227, 1228, 77}, {1232, 1259, 78}, {1262, 1269, 79}, {1272, 1273, 80}, {1329, 1366, 81}, {1369, 1369, 82}, {1377, 1415, 83}, {1488, 1514, 84}, {1520, 1522, 85}, {1569, 1594, 86}, {1600, 1610, 87}, {1649, 1719, 88}, {1722, 1726, 89}, {1728, 1742, 90}, {1744, 1747, 91}, {1749, 1749, 92}, {1765, 1766, 93}, {2309, 2361, 94}, {2365, 2365, 95}, {2392, 2401, 96}, {2437, 2444, 97}, {2447, 2448, 98}, {2451, 2472, 99}, {2474, 2480, 100}, {2482, 2482, 101}, {2486, 2489, 102}, {2524, 2525, 103}, {2527, 2529, 104}, {2544, 2545, 105}, {2565, 2570, 106}, {2575, 2576, 107}, {2579, 2600, 108}, {2602, 2608, 109}, {2610, 2611, 110}, {2613, 2614, 111}, {2616, 2617, 112}, {2649, 2652, 113}, {2654, 2654, 114}, {2674, 2676, 115}, {2693, 2699, 116}, {2701, 2701, 117}, {2703, 2705, 118}, {2707, 2728, 119}, {2730, 2736, 120}, {2738, 2739, 121}, {2741, 2745, 122}, {2749, 2749, 123}, {2784, 2784, 124}, {2821, 2828, 125}, {2831, 2832, 126}, {2835, 2856, 127}, {2858, 2864, 128}, {2866, 2867, 129}, {2870, 2873, 130}, {2877, 2877, 131}, {2908, 2909, 132}, {2911, 2913, 133}, {2949, 2954, 134}, {2958, 2960, 135}, {2962, 2965, 136}, {2969, 2970, 137}, {2972, 2972, 138}, {2974, 2975, 139}, {2979, 2980, 140}, {2984, 2986, 141}, {2990, 2997, 142}, {2999, 3001, 143}, {3077, 3084, 144}, {3086, 3088, 145}, {3090, 3112, 146}, {3114, 3123, 147}, {3125, 3129, 148}, {3168, 3169, 149}, {3205, 3212, 150}, {3214, 3216, 151}, {3218, 3240, 152}, {3242, 3251, 153}, {3253, 3257, 154}, {3294, 3294, 155}, {3296, 3297, 156}, {3333, 3340, 157}, {3342, 3344, 158}, {3346, 3368, 159}, {3370, 3385, 160}, {3424, 3425, 161}, {3585, 3630, 162}, {3632, 3632, 163}, {3634, 3635, 164}, {3648, 3654, 165}, {3713, 3714, 166}, {3716, 3716, 167}, {3719, 3720, 168}, {3722, 3722, 169}, {3725, 3725, 170}, {3732, 3735, 171}, {3737, 3743, 172}, {3745, 3747, 173}, {3749, 3749, 174}, {3751, 3751, 175}, {3754, 3755, 176}, {3757, 3758, 177}, {3760, 3760, 178}, {3762, 3763, 179}, {3773, 3773, 180}, {3776, 3780, 181}, {3782, 3782, 182}, {3804, 3805, 183}, {3904, 3911, 184}, {3913, 3945, 185}, {4256, 4293, 186}, {4304, 4342, 187}, {4352, 4441, 188}, {4447, 4514, 189}, {4520, 4601, 190}, {7680, 7835, 191}, {7840, 7929, 192}, {7936, 7957, 193}, {7960, 7965, 194}, {7968, 8005, 195}, {8008, 8013, 196}, {8016, 8023, 197}, {8025, 8025, 198}, {8027, 8027, 199}, {8029, 8029, 200}, {8031, 8061, 201}, {8064, 8116, 202}, {8118, 8124, 203}, {8126, 8126, 204}, {8130, 8132, 205}, {8134, 8140, 206}, {8144, 8147, 207}, {8150, 8155, 208}, {8160, 8172, 209}, {8178, 8180, 210}, {8182, 8188, 211}, {8319, 8319, 212}, {8450, 8450, 213}, {8455, 8455, 214}, {8458, 8467, 215}, {8469, 8469, 216}, {8472, 8477, 217}, {8484, 8484, 218}, {8486, 8486, 219}, {8488, 8488, 220}, {8490, 8497, 221}, {8499, 8504, 222}, {12293, 12293, 223}, {12337, 12341, 224}, {12353, 12436, 225}, {12443, 12446, 226}, {12449, 12538, 227}, {12540, 12542, 228}, {12549, 12588, 229}, {12593, 12686, 230}, {19968, 40869, 231}, {44032, 55203, 232}, {63744, 64045, 233}, {64256, 64262, 234}, {64275, 64279, 235}, {64287, 64296, 236}, {64298, 64310, 237}, {64312, 64316, 238}, {64318, 64318, 239}, {64320, 64321, 240}, {64323, 64324, 241}, {64326, 64433, 242}, {64467, 64829, 243}, {64848, 64911, 244}, {64914, 64967, 245}, {65008, 65019, 246}, {65136, 65138, 247}, {65140, 65140, 248}, {65142, 65276, 249}, {65313, 65338, 250}, {65345, 65370, 251}, {65382, 65470, 252}, {65474, 65479, 253}, {65482, 65487, 254}, {65490, 65495, 255}, {65498, 65500, 256}, },
            {{9, 32, -2}, },
            {{9, 32, -2}, },
            {{9, 32, -2}, },
            {{9, 9, 1}, {10, 10, 257}, {12, 32, -2}, },
            {{9, 32, -2}, },
            {{61, 61, 258}, },
            {{0, 8, 259}, {11, 12, 259}, {14, 33, 259}, {34, 34, 260}, {35, 65535, 259}, },
            {},
            {{0, 8, 261}, {11, 12, 261}, {14, 38, 261}, {39, 39, 262}, {40, 65535, 261}, },
            {},
            {},
            {{124, 124, 263}, },
            {},
            {},
            {{45, 45, 264}, {62, 62, 265}, },
            {{46, 46, 266}, },
            {},
            {},
            {{48, 57, 267}, },
            {},
            {},
            {{61, 61, 268}, {62, 62, 269}, },
            {},
            {{61, 61, 270}, },
            {{48, 57, 271}, {65, 90, 272}, {95, 95, 273}, {97, 122, 274}, {170, 170, 275}, {181, 181, 276}, {186, 186, 277}, {192, 214, 278}, {216, 246, 279}, {248, 501, 280}, {506, 535, 281}, {592, 680, 282}, {688, 696, 283}, {699, 705, 284}, {720, 721, 285}, {736, 740, 286}, {890, 890, 287}, {902, 902, 288}, {904, 906, 289}, {908, 908, 290}, {910, 929, 291}, {931, 974, 292}, {976, 982, 293}, {986, 986, 294}, {988, 988, 295}, {990, 990, 296}, {992, 992, 297}, {994, 1011, 298}, {1025, 1036, 299}, {1038, 1103, 300}, {1105, 1116, 301}, {1118, 1153, 302}, {1168, 1220, 303}, {1223, 1224, 304}, {1227, 1228, 305}, {1232, 1259, 306}, {1262, 1269, 307}, {1272, 1273, 308}, {1329, 1366, 309}, {1369, 1369, 310}, {1377, 1415, 311}, {1488, 1514, 312}, {1520, 1522, 313}, {1569, 1594, 314}, {1600, 1610, 315}, {1632, 1641, 316}, {1649, 1719, 317}, {1722, 1726, 318}, {1728, 1742, 319}, {1744, 1747, 320}, {1749, 1749, 321}, {1765, 1766, 322}, {1776, 1785, 323}, {2309, 2361, 324}, {2365, 2365, 325}, {2392, 2401, 326}, {2406, 2415, 327}, {2437, 2444, 328}, {2447, 2448, 329}, {2451, 2472, 330}, {2474, 2480, 331}, {2482, 2482, 332}, {2486, 2489, 333}, {2524, 2525, 334}, {2527, 2529, 335}, {2534, 2543, 336}, {2544, 2545, 337}, {2565, 2570, 338}, {2575, 2576, 339}, {2579, 2600, 340}, {2602, 2608, 341}, {2610, 2611, 342}, {2613, 2614, 343}, {2616, 2617, 344}, {2649, 2652, 345}, {2654, 2654, 346}, {2662, 2671, 347}, {2674, 2676, 348}, {2693, 2699, 349}, {2701, 2701, 350}, {2703, 2705, 351}, {2707, 2728, 352}, {2730, 2736, 353}, {2738, 2739, 354}, {2741, 2745, 355}, {2749, 2749, 356}, {2784, 2784, 357}, {2790, 2799, 358}, {2821, 2828, 359}, {2831, 2832, 360}, {2835, 2856, 361}, {2858, 2864, 362}, {2866, 2867, 363}, {2870, 2873, 364}, {2877, 2877, 365}, {2908, 2909, 366}, {2911, 2913, 367}, {2918, 2927, 368}, {2949, 2954, 369}, {2958, 2960, 370}, {2962, 2965, 371}, {2969, 2970, 372}, {2972, 2972, 373}, {2974, 2975, 374}, {2979, 2980, 375}, {2984, 2986, 376}, {2990, 2997, 377}, {2999, 3001, 378}, {3047, 3055, 379}, {3077, 3084, 380}, {3086, 3088, 381}, {3090, 3112, 382}, {3114, 3123, 383}, {3125, 3129, 384}, {3168, 3169, 385}, {3174, 3183, 386}, {3205, 3212, 387}, {3214, 3216, 388}, {3218, 3240, 389}, {3242, 3251, 390}, {3253, 3257, 391}, {3294, 3294, 392}, {3296, 3297, 393}, {3302, 3311, 394}, {3333, 3340, 395}, {3342, 3344, 396}, {3346, 3368, 397}, {3370, 3385, 398}, {3424, 3425, 399}, {3430, 3439, 400}, {3585, 3630, 401}, {3632, 3632, 402}, {3634, 3635, 403}, {3648, 3654, 404}, {3664, 3673, 405}, {3713, 3714, 406}, {3716, 3716, 407}, {3719, 3720, 408}, {3722, 3722, 409}, {3725, 3725, 410}, {3732, 3735, 411}, {3737, 3743, 412}, {3745, 3747, 413}, {3749, 3749, 414}, {3751, 3751, 415}, {3754, 3755, 416}, {3757, 3758, 417}, {3760, 3760, 418}, {3762, 3763, 419}, {3773, 3773, 420}, {3776, 3780, 421}, {3782, 3782, 422}, {3792, 3801, 423}, {3804, 3805, 424}, {3872, 3881, 425}, {3904, 3911, 426}, {3913, 3945, 427}, {4256, 4293, 428}, {4304, 4342, 429}, {4352, 4441, 430}, {4447, 4514, 431}, {4520, 4601, 432}, {7680, 7835, 433}, {7840, 7929, 434}, {7936, 7957, 435}, {7960, 7965, 436}, {7968, 8005, 437}, {8008, 8013, 438}, {8016, 8023, 439}, {8025, 8025, 440}, {8027, 8027, 441}, {8029, 8029, 442}, {8031, 8061, 443}, {8064, 8116, 444}, {8118, 8124, 445}, {8126, 8126, 446}, {8130, 8132, 447}, {8134, 8140, 448}, {8144, 8147, 449}, {8150, 8155, 450}, {8160, 8172, 451}, {8178, 8180, 452}, {8182, 8188, 453}, {8319, 8319, 454}, {8450, 8450, 455}, {8455, 8455, 456}, {8458, 8467, 457}, {8469, 8469, 458}, {8472, 8477, 459}, {8484, 8484, 460}, {8486, 8486, 461}, {8488, 8488, 462}, {8490, 8497, 463}, {8499, 8504, 464}, {12293, 12293, 465}, {12337, 12341, 466}, {12353, 12436, 467}, {12443, 12446, 468}, {12449, 12538, 469}, {12540, 12542, 470}, {12549, 12588, 471}, {12593, 12686, 472}, {19968, 40869, 473}, {44032, 55203, 474}, {63744, 64045, 475}, {64256, 64262, 476}, {64275, 64279, 477}, {64287, 64296, 478}, {64298, 64310, 479}, {64312, 64316, 480}, {64318, 64318, 481}, {64320, 64321, 482}, {64323, 64324, 483}, {64326, 64433, 484}, {64467, 64829, 485}, {64848, 64911, 486}, {64914, 64967, 487}, {65008, 65019, 488}, {65136, 65138, 489}, {65140, 65140, 490}, {65142, 65276, 491}, {65296, 65305, 492}, {65313, 65338, 493}, {65345, 65370, 494}, {65382, 65470, 495}, {65474, 65479, 496}, {65482, 65487, 497}, {65490, 65495, 498}, {65498, 65500, 499}, },
            {{48, 95, -27}, {97, 101, 274}, {102, 102, 500}, {103, 122, 274}, {170, 65500, -27}, },
            {{48, 95, -27}, {97, 100, 274}, {101, 101, 501}, {102, 122, 274}, {170, 65500, -27}, },
            {},
            {{48, 95, -27}, {97, 109, 274}, {110, 110, 502}, {111, 122, 274}, {170, 65500, -27}, },
            {{48, 95, -27}, {97, 97, 503}, {98, 110, 274}, {111, 111, 504}, {112, 122, 274}, {170, 65500, -27}, },
            {{48, 95, -27}, {97, 110, 274}, {111, 111, 505}, {112, 65500, -32}, },
            {{48, 95, -27}, {97, 104, 274}, {105, 105, 506}, {106, 122, 274}, {170, 65500, -27}, },
            {{48, 95, -27}, {97, 107, 274}, {108, 108, 507}, {109, 109, 274}, {110, 110, 508}, {111, 65500, -31}, },
            {{48, 65500, -27}, },
            {{48, 101, -28}, {102, 102, 509}, {103, 108, 274}, {109, 109, 510}, {110, 110, 511}, {111, 65500, -31}, },
            {{48, 100, -29}, {101, 101, 512}, {102, 65500, -29}, },
            {{48, 95, -27}, {97, 97, 513}, {98, 104, 274}, {105, 105, 514}, {106, 110, 274}, {111, 111, 515}, {112, 65500, -32}, },
            {{48, 110, -33}, {111, 111, 516}, {112, 65500, -32}, },
            {{48, 95, -27}, {97, 113, 274}, {114, 114, 517}, {115, 122, 274}, {170, 65500, -27}, },
            {{48, 100, -29}, {101, 101, 518}, {102, 65500, -29}, },
            {{48, 100, -29}, {101, 101, 519}, {102, 115, 274}, {116, 116, 520}, {117, 122, 274}, {170, 65500, -27}, },
            {{48, 95, -27}, {97, 103, 274}, {104, 104, 521}, {105, 116, 274}, {117, 117, 522}, {118, 122, 274}, {170, 65500, -27}, },
            {{48, 110, -33}, {111, 111, 523}, {112, 65500, -32}, },
            {},
            {},
            {},
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{9, 32, -2}, },
            {},
            {{0, 65535, -9}, },
            {},
            {{0, 65535, -11}, },
            {},
            {},
            {{0, 9, 524}, {10, 10, 525}, {11, 12, 524}, {13, 13, 526}, {14, 65535, 524}, },
            {},
            {},
            {{48, 57, 267}, },
            {},
            {},
            {},
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 57, 527}, {65, 90, 528}, {97, 122, 529}, {170, 170, 530}, {181, 181, 531}, {186, 186, 532}, {192, 214, 533}, {216, 246, 534}, {248, 501, 535}, {506, 535, 536}, {592, 680, 537}, {688, 696, 538}, {699, 705, 539}, {720, 721, 540}, {736, 740, 541}, {890, 890, 542}, {902, 902, 543}, {904, 906, 544}, {908, 908, 545}, {910, 929, 546}, {931, 974, 547}, {976, 982, 548}, {986, 986, 549}, {988, 988, 550}, {990, 990, 551}, {992, 992, 552}, {994, 1011, 553}, {1025, 1036, 554}, {1038, 1103, 555}, {1105, 1116, 556}, {1118, 1153, 557}, {1168, 1220, 558}, {1223, 1224, 559}, {1227, 1228, 560}, {1232, 1259, 561}, {1262, 1269, 562}, {1272, 1273, 563}, {1329, 1366, 564}, {1369, 1369, 565}, {1377, 1415, 566}, {1488, 1514, 567}, {1520, 1522, 568}, {1569, 1594, 569}, {1600, 1610, 570}, {1632, 1641, 571}, {1649, 1719, 572}, {1722, 1726, 573}, {1728, 1742, 574}, {1744, 1747, 575}, {1749, 1749, 576}, {1765, 1766, 577}, {1776, 1785, 578}, {2309, 2361, 579}, {2365, 2365, 580}, {2392, 2401, 581}, {2406, 2415, 582}, {2437, 2444, 583}, {2447, 2448, 584}, {2451, 2472, 585}, {2474, 2480, 586}, {2482, 2482, 587}, {2486, 2489, 588}, {2524, 2525, 589}, {2527, 2529, 590}, {2534, 2543, 591}, {2544, 2545, 592}, {2565, 2570, 593}, {2575, 2576, 594}, {2579, 2600, 595}, {2602, 2608, 596}, {2610, 2611, 597}, {2613, 2614, 598}, {2616, 2617, 599}, {2649, 2652, 600}, {2654, 2654, 601}, {2662, 2671, 602}, {2674, 2676, 603}, {2693, 2699, 604}, {2701, 2701, 605}, {2703, 2705, 606}, {2707, 2728, 607}, {2730, 2736, 608}, {2738, 2739, 609}, {2741, 2745, 610}, {2749, 2749, 611}, {2784, 2784, 612}, {2790, 2799, 613}, {2821, 2828, 614}, {2831, 2832, 615}, {2835, 2856, 616}, {2858, 2864, 617}, {2866, 2867, 618}, {2870, 2873, 619}, {2877, 2877, 620}, {2908, 2909, 621}, {2911, 2913, 622}, {2918, 2927, 623}, {2949, 2954, 624}, {2958, 2960, 625}, {2962, 2965, 626}, {2969, 2970, 627}, {2972, 2972, 628}, {2974, 2975, 629}, {2979, 2980, 630}, {2984, 2986, 631}, {2990, 2997, 632}, {2999, 3001, 633}, {3047, 3055, 634}, {3077, 3084, 635}, {3086, 3088, 636}, {3090, 3112, 637}, {3114, 3123, 638}, {3125, 3129, 639}, {3168, 3169, 640}, {3174, 3183, 641}, {3205, 3212, 642}, {3214, 3216, 643}, {3218, 3240, 644}, {3242, 3251, 645}, {3253, 3257, 646}, {3294, 3294, 647}, {3296, 3297, 648}, {3302, 3311, 649}, {3333, 3340, 650}, {3342, 3344, 651}, {3346, 3368, 652}, {3370, 3385, 653}, {3424, 3425, 654}, {3430, 3439, 655}, {3585, 3630, 656}, {3632, 3632, 657}, {3634, 3635, 658}, {3648, 3654, 659}, {3664, 3673, 660}, {3713, 3714, 661}, {3716, 3716, 662}, {3719, 3720, 663}, {3722, 3722, 664}, {3725, 3725, 665}, {3732, 3735, 666}, {3737, 3743, 667}, {3745, 3747, 668}, {3749, 3749, 669}, {3751, 3751, 670}, {3754, 3755, 671}, {3757, 3758, 672}, {3760, 3760, 673}, {3762, 3763, 674}, {3773, 3773, 675}, {3776, 3780, 676}, {3782, 3782, 677}, {3792, 3801, 678}, {3804, 3805, 679}, {3872, 3881, 680}, {3904, 3911, 681}, {3913, 3945, 682}, {4256, 4293, 683}, {4304, 4342, 684}, {4352, 4441, 685}, {4447, 4514, 686}, {4520, 4601, 687}, {7680, 7835, 688}, {7840, 7929, 689}, {7936, 7957, 690}, {7960, 7965, 691}, {7968, 8005, 692}, {8008, 8013, 693}, {8016, 8023, 694}, {8025, 8025, 695}, {8027, 8027, 696}, {8029, 8029, 697}, {8031, 8061, 698}, {8064, 8116, 699}, {8118, 8124, 700}, {8126, 8126, 701}, {8130, 8132, 702}, {8134, 8140, 703}, {8144, 8147, 704}, {8150, 8155, 705}, {8160, 8172, 706}, {8178, 8180, 707}, {8182, 8188, 708}, {8319, 8319, 709}, {8450, 8450, 710}, {8455, 8455, 711}, {8458, 8467, 712}, {8469, 8469, 713}, {8472, 8477, 714}, {8484, 8484, 715}, {8486, 8486, 716}, {8488, 8488, 717}, {8490, 8497, 718}, {8499, 8504, 719}, {12293, 12293, 720}, {12337, 12341, 721}, {12353, 12436, 722}, {12443, 12446, 723}, {12449, 12538, 724}, {12540, 12542, 725}, {12549, 12588, 726}, {12593, 12686, 727}, {19968, 40869, 728}, {44032, 55203, 729}, {63744, 64045, 730}, {64256, 64262, 731}, {64275, 64279, 732}, {64287, 64296, 733}, {64298, 64310, 734}, {64312, 64316, 735}, {64318, 64318, 736}, {64320, 64321, 737}, {64323, 64324, 738}, {64326, 64433, 739}, {64467, 64829, 740}, {64848, 64911, 741}, {64914, 64967, 742}, {65008, 65019, 743}, {65136, 65138, 744}, {65140, 65140, 745}, {65142, 65276, 746}, {65296, 65305, 747}, {65313, 65338, 748}, {65345, 65370, 749}, {65382, 65470, 750}, {65474, 65479, 751}, {65482, 65487, 752}, {65490, 65495, 753}, {65498, 65500, 754}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 95, -27}, {97, 115, 274}, {116, 116, 755}, {117, 65500, -43}, },
            {{48, 95, -27}, {97, 99, 274}, {100, 100, 756}, {101, 122, 274}, {170, 65500, -27}, },
            {{48, 95, -27}, {97, 102, 274}, {103, 103, 757}, {104, 122, 274}, {170, 65500, -27}, },
            {{48, 110, -33}, {111, 111, 758}, {112, 65500, -32}, },
            {{48, 109, -31}, {110, 110, 759}, {111, 65500, -31}, },
            {{48, 95, -27}, {97, 117, 274}, {118, 118, 760}, {119, 122, 274}, {170, 65500, -27}, },
            {{48, 95, -27}, {97, 114, 274}, {115, 115, 761}, {116, 122, 274}, {170, 65500, -27}, },
            {{48, 99, -504}, {100, 100, 762}, {101, 65500, -504}, },
            {{48, 65500, -27}, },
            {{48, 95, -27}, {97, 111, 274}, {112, 112, 763}, {113, 122, 274}, {170, 65500, -27}, },
            {{48, 115, -503}, {116, 116, 764}, {117, 65500, -43}, },
            {{48, 115, -503}, {116, 116, 765}, {117, 65500, -43}, },
            {{48, 95, -27}, {97, 119, 274}, {120, 120, 766}, {121, 122, 274}, {170, 65500, -27}, },
            {{48, 109, -31}, {110, 110, 767}, {111, 65500, -31}, },
            {{48, 99, -504}, {100, 100, 768}, {101, 65500, -504}, },
            {{48, 115, -503}, {116, 116, 769}, {117, 65500, -43}, },
            {{48, 65500, -27}, },
            {{48, 95, -27}, {97, 97, 770}, {98, 122, 274}, {170, 65500, -27}, },
            {{48, 95, -27}, {97, 112, 274}, {113, 113, 771}, {114, 115, 274}, {116, 116, 772}, {117, 65500, -43}, },
            {{48, 113, -41}, {114, 114, 773}, {115, 65500, -41}, },
            {{48, 100, -29}, {101, 101, 774}, {102, 65500, -29}, },
            {{48, 111, -512}, {112, 112, 775}, {113, 65500, -512}, },
            {{48, 113, -41}, {114, 114, 776}, {115, 65500, -41}, },
            {{0, 65535, -266}, },
            {},
            {{10, 10, 777}, },
            {{48, 57, 778}, {65, 90, 779}, {95, 95, 273}, {97, 122, 780}, {170, 170, 781}, {181, 181, 782}, {186, 186, 783}, {192, 214, 784}, {216, 246, 785}, {248, 501, 786}, {506, 535, 787}, {592, 680, 788}, {688, 696, 789}, {699, 705, 790}, {720, 721, 791}, {736, 740, 792}, {890, 890, 793}, {902, 902, 794}, {904, 906, 795}, {908, 908, 796}, {910, 929, 797}, {931, 974, 798}, {976, 982, 799}, {986, 986, 800}, {988, 988, 801}, {990, 990, 802}, {992, 992, 803}, {994, 1011, 804}, {1025, 1036, 805}, {1038, 1103, 806}, {1105, 1116, 807}, {1118, 1153, 808}, {1168, 1220, 809}, {1223, 1224, 810}, {1227, 1228, 811}, {1232, 1259, 812}, {1262, 1269, 813}, {1272, 1273, 814}, {1329, 1366, 815}, {1369, 1369, 816}, {1377, 1415, 817}, {1488, 1514, 818}, {1520, 1522, 819}, {1569, 1594, 820}, {1600, 1610, 821}, {1632, 1641, 822}, {1649, 1719, 823}, {1722, 1726, 824}, {1728, 1742, 825}, {1744, 1747, 826}, {1749, 1749, 827}, {1765, 1766, 828}, {1776, 1785, 829}, {2309, 2361, 830}, {2365, 2365, 831}, {2392, 2401, 832}, {2406, 2415, 833}, {2437, 2444, 834}, {2447, 2448, 835}, {2451, 2472, 836}, {2474, 2480, 837}, {2482, 2482, 838}, {2486, 2489, 839}, {2524, 2525, 840}, {2527, 2529, 841}, {2534, 2543, 842}, {2544, 2545, 843}, {2565, 2570, 844}, {2575, 2576, 845}, {2579, 2600, 846}, {2602, 2608, 847}, {2610, 2611, 848}, {2613, 2614, 849}, {2616, 2617, 850}, {2649, 2652, 851}, {2654, 2654, 852}, {2662, 2671, 853}, {2674, 2676, 854}, {2693, 2699, 855}, {2701, 2701, 856}, {2703, 2705, 857}, {2707, 2728, 858}, {2730, 2736, 859}, {2738, 2739, 860}, {2741, 2745, 861}, {2749, 2749, 862}, {2784, 2784, 863}, {2790, 2799, 864}, {2821, 2828, 865}, {2831, 2832, 866}, {2835, 2856, 867}, {2858, 2864, 868}, {2866, 2867, 869}, {2870, 2873, 870}, {2877, 2877, 871}, {2908, 2909, 872}, {2911, 2913, 873}, {2918, 2927, 874}, {2949, 2954, 875}, {2958, 2960, 876}, {2962, 2965, 877}, {2969, 2970, 878}, {2972, 2972, 879}, {2974, 2975, 880}, {2979, 2980, 881}, {2984, 2986, 882}, {2990, 2997, 883}, {2999, 3001, 884}, {3047, 3055, 885}, {3077, 3084, 886}, {3086, 3088, 887}, {3090, 3112, 888}, {3114, 3123, 889}, {3125, 3129, 890}, {3168, 3169, 891}, {3174, 3183, 892}, {3205, 3212, 893}, {3214, 3216, 894}, {3218, 3240, 895}, {3242, 3251, 896}, {3253, 3257, 897}, {3294, 3294, 898}, {3296, 3297, 899}, {3302, 3311, 900}, {3333, 3340, 901}, {3342, 3344, 902}, {3346, 3368, 903}, {3370, 3385, 904}, {3424, 3425, 905}, {3430, 3439, 906}, {3585, 3630, 907}, {3632, 3632, 908}, {3634, 3635, 909}, {3648, 3654, 910}, {3664, 3673, 911}, {3713, 3714, 912}, {3716, 3716, 913}, {3719, 3720, 914}, {3722, 3722, 915}, {3725, 3725, 916}, {3732, 3735, 917}, {3737, 3743, 918}, {3745, 3747, 919}, {3749, 3749, 920}, {3751, 3751, 921}, {3754, 3755, 922}, {3757, 3758, 923}, {3760, 3760, 924}, {3762, 3763, 925}, {3773, 3773, 926}, {3776, 3780, 927}, {3782, 3782, 928}, {3792, 3801, 929}, {3804, 3805, 930}, {3872, 3881, 931}, {3904, 3911, 932}, {3913, 3945, 933}, {4256, 4293, 934}, {4304, 4342, 935}, {4352, 4441, 936}, {4447, 4514, 937}, {4520, 4601, 938}, {7680, 7835, 939}, {7840, 7929, 940}, {7936, 7957, 941}, {7960, 7965, 942}, {7968, 8005, 943}, {8008, 8013, 944}, {8016, 8023, 945}, {8025, 8025, 946}, {8027, 8027, 947}, {8029, 8029, 948}, {8031, 8061, 949}, {8064, 8116, 950}, {8118, 8124, 951}, {8126, 8126, 952}, {8130, 8132, 953}, {8134, 8140, 954}, {8144, 8147, 955}, {8150, 8155, 956}, {8160, 8172, 957}, {8178, 8180, 958}, {8182, 8188, 959}, {8319, 8319, 960}, {8450, 8450, 961}, {8455, 8455, 962}, {8458, 8467, 963}, {8469, 8469, 964}, {8472, 8477, 965}, {8484, 8484, 966}, {8486, 8486, 967}, {8488, 8488, 968}, {8490, 8497, 969}, {8499, 8504, 970}, {12293, 12293, 971}, {12337, 12341, 972}, {12353, 12436, 973}, {12443, 12446, 974}, {12449, 12538, 975}, {12540, 12542, 976}, {12549, 12588, 977}, {12593, 12686, 978}, {19968, 40869, 979}, {44032, 55203, 980}, {63744, 64045, 981}, {64256, 64262, 982}, {64275, 64279, 983}, {64287, 64296, 984}, {64298, 64310, 985}, {64312, 64316, 986}, {64318, 64318, 987}, {64320, 64321, 988}, {64323, 64324, 989}, {64326, 64433, 990}, {64467, 64829, 991}, {64848, 64911, 992}, {64914, 64967, 993}, {65008, 65019, 994}, {65136, 65138, 995}, {65140, 65140, 996}, {65142, 65276, 997}, {65296, 65305, 998}, {65313, 65338, 999}, {65345, 65370, 1000}, {65382, 65470, 1001}, {65474, 65479, 1002}, {65482, 65487, 1003}, {65490, 65495, 1004}, {65498, 65500, 1005}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 107, -35}, {108, 108, 1006}, {109, 122, 274}, {170, 65500, -27}, },
            {{48, 115, -503}, {116, 116, 1007}, {117, 65500, -43}, },
            {{48, 65500, -27}, },
            {{48, 100, -29}, {101, 101, 1008}, {102, 65500, -29}, },
            {{48, 57, 271}, {65, 66, 272}, {67, 67, 1009}, {68, 90, 272}, {95, 104, -34}, {105, 105, 1010}, {106, 65500, -34}, },
            {{48, 107, -35}, {108, 108, 1011}, {109, 65500, -760}, },
            {{48, 100, -29}, {101, 101, 1012}, {102, 65500, -29}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 107, -35}, {108, 108, 1013}, {109, 65500, -760}, },
            {{48, 95, -27}, {97, 116, 274}, {117, 117, 1014}, {118, 65500, -44}, },
            {{48, 65500, -27}, },
            {{48, 104, -34}, {105, 105, 1015}, {106, 65500, -34}, },
            {{48, 109, -31}, {110, 110, 1016}, {111, 65500, -31}, },
            {{48, 107, -35}, {108, 108, 1017}, {109, 65500, -760}, },
            {{48, 65500, -27}, },
            {},
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 65500, -529}, },
            {{48, 100, -29}, {101, 101, 1018}, {102, 65500, -29}, },
            {{48, 100, -29}, {101, 101, 1019}, {102, 65500, -29}, },
            {{48, 65500, -27}, },
            {{48, 110, -33}, {111, 111, 1020}, {112, 65500, -32}, },
            {{48, 101, -28}, {102, 102, 1021}, {103, 65500, -28}, },
            {{48, 104, -34}, {105, 105, 1022}, {106, 65500, -34}, },
            {{48, 102, -505}, {103, 103, 1023}, {104, 65500, -505}, },
            {{48, 65500, -27}, },
            {{48, 100, -29}, {101, 101, 1024}, {102, 65500, -29}, },
            {{48, 109, -31}, {110, 110, 1025}, {111, 65500, -31}, },
            {{48, 65500, -27}, },
            {{48, 100, -29}, {101, 101, 1026}, {102, 65500, -29}, },
            {{48, 95, -27}, {97, 97, 1027}, {98, 65500, -520}, },
            {{48, 119, -515}, {120, 120, 1028}, {121, 65500, -515}, },
            {{48, 109, -31}, {110, 110, 1029}, {111, 65500, -31}, },
            {{48, 65500, -27}, },
            {{48, 100, -29}, {101, 101, 1030}, {102, 65500, -29}, },
            {{48, 100, -29}, {101, 101, 1031}, {102, 65500, -29}, },
            {{48, 109, -31}, {110, 110, 1032}, {111, 65500, -31}, },
            {{48, 102, -505}, {103, 103, 1033}, {104, 65500, -505}, },
            {{48, 65500, -27}, },
            {{48, 109, -31}, {110, 110, 1034}, {111, 65500, -31}, },
            {{48, 115, -503}, {116, 116, 1035}, {117, 65500, -43}, },
            {{48, 115, -503}, {116, 116, 1036}, {117, 65500, -43}, },
            {{48, 114, -509}, {115, 115, 1037}, {116, 65500, -509}, },
            {{48, 113, -41}, {114, 114, 1038}, {115, 65500, -41}, },
            {{48, 95, -27}, {97, 98, 274}, {99, 99, 1039}, {100, 122, 274}, {170, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 100, -29}, {101, 101, 1040}, {102, 65500, -29}, },
            {{48, 65500, -27}, },
            {{48, 65500, -27}, },
            {{48, 100, -29}, {101, 101, 1041}, {102, 65500, -29}, },
            {{48, 119, -515}, {120, 120, 1042}, {121, 65500, -515}, },
            {{48, 65500, -27}, },
            {{48, 115, -503}, {116, 116, 1043}, {117, 65500, -43}, },
            {{48, 65500, -27}, },
        }
    };*/

    private static int[][] accept;
/*  {
        // NORMAL
        {0, 0, 0, 0, 0, 0, 37, -1, 18, -1, 40, 41, 47, 39, 21, 34, 23, 22, 50, 50, 20, 46, 31, 25, 27, 53, 53, 53, 44, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 42, 48, 43, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 0, 36, -1, 52, -1, 52, 49, 1, 19, 24, 51, 51, 51, -1, -1, 50, 30, 36, 26, 53, 53, -1, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 2, 53, 53, 53, 53, 53, 53, 53, 53, 2, 53, 7, 53, 53, 53, 53, 53, 38, 53, 53, 53, 53, 53, 53, 1, 1, 1, -1, -1, 51, -1, -1, -1, -1, 51, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 6, 18, 15, 53, 53, 29, 53, 53, 53, 53, 6, 32, 33, 35, 37, 53, 53, 14, 53, 53, 53, 49, 1, -1, -1, 51, -1, -1, 51, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 4, 53, 53, 53, 53, 12, 53, 53, 3, 53, 53, 53, 53, 5, 53, 53, 53, 53, 17, 53, 53, 53, 53, 53, 53, 13, 10, 8, 53, 28, 11, 53, 53, 16, 53, 9, },
        // RANGE
        {0, 0, 0, 0, 0, 0, 37, -1, 18, -1, 40, 41, 47, 39, 21, 34, 23, 22, 50, 50, 20, 46, 31, 25, 27, 53, 53, 53, 45, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 42, 48, 43, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 0, 36, -1, 52, -1, 52, 49, 1, 19, 24, 50, 30, 36, 26, 53, 53, -1, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 2, 53, 53, 53, 53, 53, 53, 53, 53, 2, 53, 7, 53, 53, 53, 53, 53, 38, 53, 53, 53, 53, 53, 53, 1, 1, 1, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 6, 18, 15, 53, 53, 29, 53, 53, 53, 53, 6, 32, 33, 35, 37, 53, 53, 14, 53, 53, 53, 49, 1, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 4, 53, 53, 53, 53, 12, 53, 53, 3, 53, 53, 53, 53, 5, 53, 53, 53, 53, 17, 53, 53, 53, 53, 53, 53, 13, 10, 8, 53, 28, 11, 53, 53, 16, 53, 9, },

    };*/

    public static class State
    {
        public final static State NORMAL = new State(0);
        public final static State RANGE = new State(1);

        private int id;

        private State(@SuppressWarnings("hiding") int id)
        {
            this.id = id;
        }

        public int id()
        {
            return this.id;
        }
    }

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Lexer.class.getResourceAsStream("lexer.dat")));

            // read gotoTable
            int length = s.readInt();
            gotoTable = new int[length][][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][][];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                    length = s.readInt();
                    gotoTable[i][j] = new int[length][3];
                    for(int k = 0; k < gotoTable[i][j].length; k++)
                    {
                        for(int l = 0; l < 3; l++)
                        {
                            gotoTable[i][j][k][l] = s.readInt();
                        }
                    }
                }
            }

            // read accept
            length = s.readInt();
            accept = new int[length][];
            for(int i = 0; i < accept.length; i++)
            {
                length = s.readInt();
                accept[i] = new int[length];
                for(int j = 0; j < accept[i].length; j++)
                {
                    accept[i][j] = s.readInt();
                }
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"lexer.dat\" is either missing or corrupted.");
        }
    }
}
