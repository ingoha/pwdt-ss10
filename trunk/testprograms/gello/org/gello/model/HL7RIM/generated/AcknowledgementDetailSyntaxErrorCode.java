//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.0-b26-ea3 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2006.11.08 at 12:07:49 PM PST 
//


package org.gello.model.HL7RIM.generated;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import org.gello.model.HL7RIM.generated.AcknowledgementDetailSyntaxErrorCode;


/**
 * <p>Java class for AcknowledgementDetailSyntaxErrorCode.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="AcknowledgementDetailSyntaxErrorCode">
 *   &lt;restriction base="{}cs">
 *     &lt;enumeration value="SYN102"/>
 *     &lt;enumeration value="SYN104"/>
 *     &lt;enumeration value="SYN110"/>
 *     &lt;enumeration value="SYN112"/>
 *     &lt;enumeration value="SYN100"/>
 *     &lt;enumeration value="SYN101"/>
 *     &lt;enumeration value="SYN103"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlEnum
public enum AcknowledgementDetailSyntaxErrorCode {

    @XmlEnumValue("SYN100")
    SYN_100("SYN100"),
    @XmlEnumValue("SYN101")
    SYN_101("SYN101"),
    @XmlEnumValue("SYN102")
    SYN_102("SYN102"),
    @XmlEnumValue("SYN103")
    SYN_103("SYN103"),
    @XmlEnumValue("SYN104")
    SYN_104("SYN104"),
    @XmlEnumValue("SYN110")
    SYN_110("SYN110"),
    @XmlEnumValue("SYN112")
    SYN_112("SYN112");
    private final String value;

    AcknowledgementDetailSyntaxErrorCode(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static AcknowledgementDetailSyntaxErrorCode fromValue(String v) {
        for (AcknowledgementDetailSyntaxErrorCode c: AcknowledgementDetailSyntaxErrorCode.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v.toString());
    }

}
