<HTML>
<HEAD>
	<TITLE>Integrator Level II+ Training</TITLE><LINK href="training.css" type=text/css rel=stylesheet>
</HEAD>
<BODY>


<h1>
<img src="images/hie_box.gif" align="middle" hspace=7>
 Integrator - ODBC Training </H1>

<h1> Module 210: Examples of procedures related to return codes </h1>








<PRE>
######################################################################
# odbcGetError: Call if an ODBC error has occurred.
#
# Returns: 3-element list: {state local message}
#          Always returns TCL_OK
#
#
proc odbcGetError { henv hdbc hstmt } {
	# SQLError can be called to get detailed info whenever the returncode
	# is SQL_ERROR or SQL_SUCCESS_WITH_INFO. (the latter returncode is non-fatal). 
	# If the previous returncode was unable to the above,
	# there won't be any additional information..
	set state {}
	set local {}
	set msg {No error details available -OR- Error when calling SQLError procedure}

        # catch omitted	
	odbc SQLError $henv $hdbc $hstmt state local msg 200 sz
  
	return [list $state $local $msg]
}

######################################################################
# odbcResultIsFailure: determine whether resultcode is a fatal error
# returns: 1 or 0
#
proc odbcResultIsFailure { err } {
  # Checks for all possible returncodes that indicate we can't call
  # additional functions.

  return [expr {[lsearch {SQL_ERROR SQL_INVALID_HANDLE \
          SQL_STILL_EXECUTING} $err] >= 0} ]
}

######################################################################
# odbcResultIsSuccess: determine whether resultcode indicates success
# returns: 1 or 0
#
proc odbcResultIsSuccess { err } {
  # success is every result code that's not a failure
  return [expr {! [odbcResultIsFailure $err]}]
}

</PRE>


<h2> Example error messages </h2>

A number of error messages are listed below. See other ODBC documentation
for an explanation of all status codes.


<PRE>**** State = S1T00 (Timeout Expired)
[INTERSOLV][ODBC SQL Server driver][SQL Server]
ct_connect (): User API Layer: internal client library
error: Read from the server has timed out.
</PRE>
Observed when the initialization of a connection
failed because the destination system was unreachable or down.


<PRE>**** State = S1000 (General Error)
[INTERSOLV][ODBC SQL Server driver][SQL Server]
... Failure to execute Net_Library operation due to disconnect.
</PRE>
Observed when the network connection was broken. 


<PRE>**** State = 08S01 (Cummunication Link Failure)
[INTERSOLV][DB2/AS400] Com Link Failure COMM RC = 0x5
</PRE>
Observed when the connection to an AS400/DB2 system was broken.


<PRE>**** State = 40001 (Serialization Failure)
[INTERSOLV][ODBC SQL Server Driver][SQL Server]Your server command was 
deadlocked with another process and has been chosen as deadlock victim.
Re-Run your command. 
</PRE>
Observed when executing SQLFetch.


<p>
When we execute an insert statement and the state equals 22??? or 07006 then
the error is related to a column value (its type, size, precision). Other states
are fatal.