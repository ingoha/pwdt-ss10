<HTML>
<HEAD>
        <TITLE>Integrator Level II Training</TITLE><LINK href="training.css" type=text/css rel=stylesheet>
</HEAD>
<BODY>



<h1>
<img src="images/hie_box.gif" align="middle" hspace=7>
 Integrator - Level II Training </H1>

<h1> Module 16L: LAB: Tcl</h1>





<h2>The Tcl interpreter</h2>

Integrator uses the Tool Command Language (Tcl) for its scripting extensions.
The internals of the engine use multiple concurrent Tcl interpreters.
The Tcl interpreter can be used in its interactive mode by starting it
from the command line with the <EM>hcitcl</EM> command. 
The root and site environment variables have to be set before the interpreter
can be started. The interpreter is mostly used interactively in order
to test snippets of Tcl code before they are actually used as an extension to the engine.
<em>hcitcl is usually pronounced like 'hickytickle'</em>
<P> Open a command line session, check with the aid of showroot whether or not
the root and site environment variables have been set, and start the interpreter with
<EM>hcitcl</EM>.

<p>
Tcl scripts can be created by any text editor (e.g. <em>NotePad</em>, <em>vi</em> or <em>hcitextedit</em>).
You are advised to choose a unique filename for each lab (e.g. lab16.2.tcl).
A Tcl script can be executed/interpreted in one of the following ways:
<UL>
<LI>Use the <em>source filename</em> command within the interpreter;
<LI>Use the <em>hcitcl filename</em> command on the command line;
<LI>(Unix:) Create executable Tcl files by using the following
as the very first line in the scriptfile: <BR>
<b>#!/hci/root3.8.1P/bin/hcitcl</b> or <b>#!/quovadx/qdx5.0P/integrator/bin/hcitcl</b> (use your current version!)<BR>
Remember to change the filemode to executable as well (<em>chmod 774 filename</em>).
<LI>(NT:) Create a batch file with the following content: <br>
<b>%HCIROOT%\bin\hcitcl filename %1 %2 %3 %4 %5</b>
</UL>

<h2>Tcl - References </h2>
The following online references or other reference materials may provide you with 
additional information about Tcl and extended Tcl:
<ul>
<li><em><b>help</B> procedureName</em> within the Tcl interpreter.
<li>call the procedure without any parameters within the Tcl interpreter.
<li><em><b>info body </B>procedureName</em> within the Tcl interpreter.
<li>see "Tcl and the Tk toolkit", J.K. Ousterhout, Addison-Wesley.
<li>see the Tcl FAQ (available via http://sunscript.sun.com).
</ul>


<h2> Labs </h2>
<b>1.</b>Write a Tcl procedure that uses 2 parameters: index en list. 
The procedure should return the element in the list at position <em>index</em>.

<p>
<b>2.</b>Write a Tcl procedure that uses 1 parameter: number.
The procedure should return a Tcl-list containing all numbers between 1 and <em>number</em>.
<br>Hints: Use the lappend function.

<PRE>proc p1 { a } {
set double [ expr { $a * 2 } ]
return $double
}

echo [p1 5]

set x 0
set outlist {}
while { $x &lt; 8 } {
  lappend outlist $x
  incr x
}
</PRE>


<p>
<b>3.</b>Write a Tcl procedure that uses 1 parameter: number.
The procedure should return a Tcl-list containing the squares of 
all numbers between 1 and <em>number</em>.
<br>Hints: The square of x is equal to [ expr { $x * $x } ]

<p>
<b>4.</b>Write a Tcl procedure that uses 1 parameter: monthnum.
The procedure should return the name of the month corresponding with <em>monthnum</em>.

<p>
<b>5.</b>Write a Tcl procedure that uses 2 parameters: numlist and max.
The procedure should return a Tcl-list containing all numbers in <em>numlist</em>
that are smaller than <em>max</em>.

<p>
<b>6.</b>Write a Tcl procedure that reads the file /usr/dict/words and display them
in reverse alphabetical order.
<br>Hints:

<PRE>set filehandle [open /etc/groups r]
while { ![eof $filehandle] } {
  gets $filehandle data
  echo $data
}
close $filehandle
</PRE>


<P>
Copyright 2002,2003 Health-Comm GmbH [110][80][90]
</BODY>
</HTML>
